{"version":3,"sources":["firebase_config.js","Credentials.js","App.js","reportWebVitals.js","index.js"],"names":["require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","CredsItem","name","passwords","isVisible","id","className","ListItem","ListItemText","variant","Button","onClick","console","log","collection","doc","update","App","useState","credentials","setCredentials","password","setPassword","title","setTitle","useEffect","onSnapshot","querySnapshot","docs","map","websites","data","website","pass","class","TextField","style","backgroundColor","width","fontWeight","margin","type","placeholder","value","onChange","event","target","textDecorationColor","add","creds","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MACAA,EAAQ,IAYNC,IAASC,cATU,CACjBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKR,IAASS,Y,oDCRP,SAASC,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,UAAUC,EAAI,EAAJA,GAQ1D,OACI,8BACI,qBAAKC,UAAU,OAAf,SACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAcC,QAAQ,WAAtB,SACI,6BACKP,MAIT,cAACQ,EAAA,EAAD,CAAQC,QAjBpB,WACIC,QAAQC,IAAIR,GACZN,EAAGe,WAAW,aAAaC,IAAIV,GAAIW,OAAO,CACtCZ,WAAYA,IAEhBQ,QAAQC,IAAI,iBAYJ,SAAmCT,EAAU,gCAAQD,IAAmB,cAAC,IAAD,a,aCqFzEc,MArGf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGaJ,mBAAS,IAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAiCb,OA5BAC,qBAAU,WAKR1B,EAAGe,WAAW,aAAaY,YAAW,SAAUC,GAC9CP,EACEO,EAAcC,KAAKC,KAAI,SAACd,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRyB,SAAWf,EAAIgB,OAAOC,QACtBC,KAAMlB,EAAIgB,OAAOV,SACjBjB,UAAWW,EAAIgB,OAAO3B,oBAT5B,IA0BK,sBAAKE,UAAU,MAAf,UACP,sBAAKA,UAAU,OAAf,UACE,kDACA,sBAAK4B,MAAM,aAAX,UACI,qBAAKA,MAAM,GAAX,SACI,cAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,YACjBC,MAAO,MACPC,WAAY,MACZC,OAAQ,OAEVC,KAAK,OACLC,YAAY,eACZC,MAAOpB,EACPqB,SAAY,SAACC,GAAD,OAAWrB,EAASqB,EAAMC,OAAOH,YAInD,qBAAKT,MAAM,GAAX,SACI,cAACC,EAAA,EAAD,CACAC,MAAO,CACLC,gBAAiB,YACjBC,MAAO,MACPC,WAAY,MACZC,OAAQ,OACRO,oBAAqB,QAErBN,KAAK,OACLC,YAAY,eACZE,SAAY,SAACC,GAAD,OAAWvB,EAAYuB,EAAMC,OAAOH,YAItD,qBAAKT,MAAM,SAAX,SACI,cAACxB,EAAA,EAAD,CACA0B,MAAO,CACLC,gBAAgB,OAChBU,oBAAoB,aAEtBtC,QAAQ,YACRE,QApDV,SAAkBkC,GAChBjC,QAAQC,IAAI,mBACZd,EAAGe,WAAW,aAAakC,IAAI,CAC7B3B,SAAWA,EACXW,QAAST,EACTnB,WAAW,IAEboB,EAAS,IACTF,EAAY,KAsCJ,qCAaR,sBAAKhB,UAAU,YAAf,UACE,kDACCa,EAAYU,KAAI,SAACoB,GAAD,OACf,cAAChD,EAAD,CACAI,GAAK4C,EAAM5C,GACXH,KAAM+C,EAAMnB,SACZ3B,UAAW8C,EAAMhB,KACjB7B,UAAa6C,EAAM7C,sBCrFZ8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63fd0c4e.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nrequire('firebase/firestore')\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDMR8XL-UI0m-sXRRQPKjRlEp2MAVYs6r0\",\r\n    authDomain: \"passwordmanager-cd322.firebaseapp.com\",\r\n    projectId: \"passwordmanager-cd322\",\r\n    storageBucket: \"passwordmanager-cd322.appspot.com\",\r\n    messagingSenderId: \"162750579916\",\r\n    appId: \"1:162750579916:web:103c7776afd39ab4792e69\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  export {db};","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Button, Icon, ListItemText, Typography } from '@material-ui/core';\r\nimport VisibilityOffSharpIcon from '@material-ui/icons/VisibilityOffSharp';\r\nimport { db } from './firebase_config';\r\nimport './App.css';\r\n\r\nexport default function CredsItem({name, passwords, isVisible,id}){\r\n    function toggleIsVisible(){\r\n        console.log(id);\r\n        db.collection(\"passwords\").doc(id).update({\r\n            isVisible: !isVisible\r\n        });\r\n        console.log(\"Reached here\");\r\n    }\r\n    return (\r\n        <div > \r\n            <div className=\"List\">\r\n            <ListItem >\r\n                <ListItemText variant=\"outlined\">\r\n                    <h3>\r\n                        {name}\r\n                    </h3>\r\n                </ListItemText>\r\n                \r\n                <Button onClick={toggleIsVisible}>{isVisible?<label>{passwords}</label>:<VisibilityOffSharpIcon/>}</Button>\r\n            </ListItem>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}","\nimport './App.css';\nimport {useState, useEffect} from \"react\";\nimport { db } from './firebase_config';\nimport CredsItem from './Credentials';\nimport { Button, TextField } from '@material-ui/core';\nimport { TextFieldsOutlined, TextFieldsSharp, TextureOutlined } from '@material-ui/icons';\n\n\nfunction App() {\n  const [credentials, setCredentials] = useState([]);\n  const [password, setPassword] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n      getCreds();\n  },[])\n\n  function getCreds(){\n    db.collection(\"passwords\").onSnapshot(function (querySnapshot){\n      setCredentials(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          websites : doc.data().website,\n          pass: doc.data().password,\n          isVisible: doc.data().isVisible,\n        }))\n      );\n    })\n  }\n\n  function addCreds(event){\n    console.log(\"Adding Password\")\n    db.collection(\"passwords\").add({\n      password : password,\n      website: title,\n      isVisible: false,\n    });\n    setTitle(\"\");\n    setPassword(\"\");\n  }\n\n  return <div className=\"App\">\n  <div className=\"form\">\n    <h1>Password Manager</h1>\n    <div class=\"form-group\">\n        <div class=\"\">\n            <TextField \n              style={{\n                backgroundColor: \"lightblue\",\n                width: \"40%\",\n                fontWeight: '400',\n                margin: '5px'\n              }}\n              type=\"text\" \n              placeholder=\"Website Name\" \n              value={title}\n              onChange = {(event) => setTitle(event.target.value)}>\n            </TextField>\n        </div>\n\n        <div class=\"\">\n            <TextField\n            style={{\n              backgroundColor: \"lightblue\",\n              width: \"40%\",\n              fontWeight: '400',\n              margin: '20px',\n              textDecorationColor: 'blue'\n            }}\n              type=\"text\" \n              placeholder=\"Set Password\" \n              onChange = {(event) => setPassword(event.target.value)}>\n            </TextField>\n        </div>  \n        \n        <div class=\"button\">\n            <Button\n            style={{\n              backgroundColor:\"blue\",\n              textDecorationColor:\"lightblue\"\n            }}\n            variant=\"contained\" \n            onClick={addCreds}>\n            Add Credentials\n            </Button>\n        </div>\n      </div>\n    \n   </div>\n    <div className=\"container\"> \n      <h1>Saved Passwords:</h1>\n      {credentials.map((creds) => (\n        <CredsItem \n        id ={creds.id}\n        name={creds.websites} \n        passwords={creds.pass}  \n        isVisible = {creds.isVisible}\n        \n        />\n      ))}\n         \n    \n      \n    \n\n  </div>\n</div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}